#!/usr/bin/bash

script_name="$(basename "${0}")"
result=1

################################################################

# Show an INFO message
# $1: message string
info() {
    local _msg="$1"
    printf '[%s] INFO: %s\n' "$script_name" "$_msg"
}

# Show a WARNING message
# $1: message string
warning() {
    local _msg="$1"
    printf '[%s] WARNING: %s\n' "$script_name" "$_msg" >&2
}

# Show an ERROR message then exit with status
# $1: message string
# $2: exit code number (with 0 does not exit)
error() {
    local _msg="$1"
    local _error="$2"
    printf '[%s] ERROR: %s\n' "$script_name" "$_msg" >&2
    if [ "$_error" -gt 0 ]; then
        exit "$_error"
    fi
}

have_function() {
	declare -f "$1" >/dev/null
}

################################################################

set -e
set -o pipefail
set -u
# set -x

# 
if [ ! -f PKGBUILD ]; then
   error 'PKGBUILD does not exist.' 2
fi

if [ -f "/etc/makepkg.conf" ]; then
    . /etc/makepkg.conf
elif [ -f "/usr/local/etc/makepkg.conf" ]; then
    . /usr/local/etc/makepkg.conf
else
    error 'makepkg.conf NOT found.' 5
fi
. PKGBUILD
PKGBUILDDIR=$(pwd)

result=0

# 
if [ ! -f PKGUPDATE ]; then
    warning "PKGUPDATE does not exist."
    result=2
    exit $result
fi

unset new_version current_version pre_update post_update
. PKGUPDATE || :
if [ -z $new_version ]; then
    error 'Cannot get new version.' 6
fi
current_version=${current_version:-$(cat PKGBUILD | grep -oP 'pkgver=\K.+$')}
current_pkgrel=$(cat PKGBUILD | grep -oP 'pkgrel=\K\d+$')

# run pre_update
if have_function 'pre_update'; then
    info "running pre_update()..."
    pre_update
fi

result=$(vercmp $new_version $current_version)
if [ $result -eq 1 ]; then
    info "PKGBUILD updated: $current_version => $new_version"
    sed -i "/^pkgver=/s/$current_version/$new_version/" PKGBUILD
    sed -i "/^pkgrel=/s/$current_pkgrel/1/" PKGBUILD
    pkgver=$new_version
    info "running updpkgsums..."
    updpkgsums || result=2
elif [ $result -eq 0 ]; then
    info "PKGBUILD is up to date."
elif [ $result -eq -1 ]; then
    warning "Current version is newer."
else
    error "Unknow \`vercmp\` result." 7
fi

# run post_update
info "running post_update()..."
makepkg -Co || result=3
post_update || result=4

# -1: current version is newer
# 0: no update
# 1: updated
# 2: PKGUPDATE does not exist
# 3: makepkg -Co error
# 4: post_update error
# 5: makepkg.conf not found
# 6: cannot get new version
# 7: unknow `vercmp` result
exit $result
