#!/bin/bash
# 
# updaterepo
#

script_name="$(basename "${0}")"

REPODIR=/home/.repository
PACKAGEDIR=$HOME/makepkg/packages
ARCHIVEDIR=$HOME/makepkg/archive
EXTENSION="zst"

# options
replace=0
clear=0
target=""

# functions
# Show an INFO message
# $1: message string
info() {
    local _msg="$1"
    printf '[%s] INFO: %s\n' "$script_name" "$_msg"
}

# Show a WARNING message
# $1: message string
warning() {
    local _msg="$1"
    printf '[%s] WARNING: %s\n' "$script_name" "$_msg" >&2
}

# Show an ERROR message then exit with status
# $1: message string
# $2: exit code number (with 0 does not exit)
error() {
    local _msg="$1"
    local _error="$2"
    printf '[%s] ERROR: %s\n' "$script_name" "$_msg" >&2
    if [ "$_error" -gt 0 ]; then
        exit "$_error"
    fi
}

update() {
    local repo
    repo=$1
    local pkg
    pkg=$2

    if [ ! -d $ARCHIVEDIR ]; then
        mkdir $ARCHIVEDIR
    fi

    #           pkgname-  epoch:      pkgver                    -pkgrel-  arch                  .pkg.tar.zst
    pkgname_regex="$pkg-\([0-9]+:\)?\([0-9a-zA-Z]+\(\.\|\+\)?\)+-[0-9]+-\(x86_64\|aarch64\|any\).pkg.tar.$EXTENSION"
    pkgname=$(find "$HOME/makepkg/packages" -type f -regex "$PACKAGEDIR/$pkgname_regex" -printf "%T@ %f\n" | sort -n | tail -n 1 | cut -d ' ' -f 2)

    if [ -f $PACKAGEDIR/$pkgname ]; then
        sudo cp -f $PACKAGEDIR/$pkgname $REPODIR/$repo
        mv $PACKAGEDIR/$pkgname $ARCHIVEDIR
        sudo repo-add -R $REPODIR/$repo/$repo.db.tar.$EXTENSION $REPODIR/$repo/$pkgname
    fi

    if [ $replace -gt 0 ] ; then
        if [ $(find $REPODIR/$repo -type f -regex "$REPODIR/$repo/$pkgname_regex" -printf "%f\n" | wc -l) -gt 1 ]; then
            error "Multiple packages with the same name \"$pkg\" are found, please check." 3
        fi
        pkgname=$(find $REPODIR/$repo -type f -regex "$REPODIR/$repo/$pkgname_regex" -printf "%f\n")
        if [ -f $REPODIR/$repo/$pkgname ]; then
            sudo repo-add -R $REPODIR/$repo/$repo.db.tar.$EXTENSION $REPODIR/$repo/$pkgname
        fi
    fi
}

usage() {
    local _usage="
update_repo (kzl-linux) %s
\"update-repo\" will update the pacman repository.

Usage: update_repo [ -c | -R ] [ -t repo ]

    -h, --help      display this help message and exit
    -t, --target    build target (kzl, rpi, tegra, ubuntu)
    -R, --replace   replace the specified old repository
    -c, --clear     clear the specified repository
"
    echo "${_usage}"
}

################################################################

set -e
set -u
set -o pipefail
set -x

umask 0022

while [ $# -gt 0 ]; do
    case "$1" in
        -h|--help)
            usage
            exit 0
            ;;
        -t|--target)
            shift
            target="$1"
            ;;
        -R|--replace)
            replace=1
            ;;
        -c|--clear)
            clear=1
            ;;
        *)
            error "Unknown option \"$1\"" 1
            ;;
    esac
    shift
done

case $target in
    kzl)
        readarray -t pkgs < <(find $ROOTDIR/pkgbuilds/$target/ -mindepth 1 -maxdepth 1 -type d -printf "%f\n")
        EXTENSION="zst"
        ;;
    # unknown repo
    *)
        error "Unknown target repo \"$target\"." 2
        ;;
esac

# clear
if [ $clear -gt 0 ]; then
    while true; do
        read -p "Do you want to clear the repository \"$target\"? " yn
        case $yn in
            [Yy]*)
                sudo rm -vrf $REPODIR/$target
                echo "Repository \"$target\" has been removed."
                exit 0
                ;;
            [Nn]*)
                exit 0
                ;;
            *)
                echo "Please answer yes(y) or no(n)."
                ;;
        esac
    done
fi

if [ ! -d "$REPODIR/$target" ]; then
    sudo mkdir -p "$REPODIR/$target"
fi

if [ ! -f "$REPODIR/$target/$target.db.tar.$EXTENSION" ]; then
    sudo repo-add "$REPODIR/$target/$target.db.tar.$EXTENSION"
fi

if [ $replace -gt 0 ]; then
    sudo find "$REPODIR/$target" -name "$target.db.tar.$EXTENSION" -delete
fi

if [ ! -f "$REPODIR/$target/$target.db.tar.$EXTENSION" ]; then
    sudo repo-add "$REPODIR/$target/$target.db.tar.$EXTENSION"
fi

## special cases
for pkgbase in ${pkgs[@]}; do
    info "Updating $pkgbase..."
    update $target $pkgbase
    case $pkgbase in
        zlib)
            update $target minizip
            ;;
        audit)
            update $target python-audit
            ;;
        lvm2)
            update $target device-mapper
            ;;
        linux)
            update $target linux-headers
            ;;
        lapack)
            update $target blas
            update $target cblas
            update $target lapacke
            ;;
    esac
done

if [ -z "$(find "$PACKAGEDIR" -empty)" ]; then
   warning "$PACKAGEDIR is not empty, please check."
fi

# 1: Unknown option
# 2: Unknown target repo
# 3: Multiple packages with the same name are found
