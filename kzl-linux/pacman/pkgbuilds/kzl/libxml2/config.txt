cmake: /usr/lib/libcurl.so.4: no version information available (required by cmake)
-- The C compiler identification is GNU 14.2.1
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Found PkgConfig: /usr/bin/pkg-config (found version "2.3.0")
-- Performing Test Iconv_IS_BUILT_IN
-- Performing Test Iconv_IS_BUILT_IN - Success
-- Found Iconv: built in to C library
-- Found ICU: /usr/include (found version "76.1") found components: data i18n uc
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
-- Found Threads: TRUE
-- Performing Test HAVE_ATTRIBUTE_DESTRUCTOR
-- Performing Test HAVE_ATTRIBUTE_DESTRUCTOR - Success
-- Looking for include file arpa/inet.h
-- Looking for include file arpa/inet.h - found
-- Looking for class
-- Looking for class - not found
-- Looking for include file dlfcn.h
-- Looking for include file dlfcn.h - found
-- Looking for dlopen in dl
-- Looking for dlopen in dl - found
-- Looking for include file dl.h
-- Looking for include file dl.h - not found
-- Looking for include file fcntl.h
-- Looking for include file fcntl.h - found
-- Looking for fpclass
-- Looking for fpclass - not found
-- Looking for ftime
-- Looking for ftime - found
-- Looking for getentropy
-- Looking for getentropy - found
-- Looking for gettimeofday
-- Looking for gettimeofday - found
-- Looking for append_history in history
-- Looking for append_history in history - found
-- Looking for readline in readline
-- Looking for readline in readline - found
-- Looking for mmap
-- Looking for mmap - found
-- Looking for munmap
-- Looking for munmap - found
-- Looking for include file netdb.h
-- Looking for include file netdb.h - found
-- Looking for include file netinet/in.h
-- Looking for include file netinet/in.h - found
-- Looking for include file poll.h
-- Looking for include file poll.h - found
-- Looking for shl_load in dld
-- Looking for shl_load in dld - not found
-- Looking for stat
-- Looking for stat - found
-- Looking for include file stdint.h
-- Looking for include file stdint.h - found
-- Looking for include file sys/mman.h
-- Looking for include file sys/mman.h - found
-- Looking for include file sys/random.h
-- Looking for include file sys/random.h - found
-- Looking for include file sys/select.h
-- Looking for include file sys/select.h - found
-- Looking for include file sys/socket.h
-- Looking for include file sys/socket.h - found
-- Looking for include file sys/stat.h
-- Looking for include file sys/stat.h - found
-- Looking for include file sys/timeb.h
-- Looking for include file sys/timeb.h - found
-- Looking for include file sys/time.h
-- Looking for include file sys/time.h - found
-- Looking for include file unistd.h
-- Looking for include file unistd.h - found
-- Performing Test XML_SOCKLEN_T_SOCKLEN_T
-- Performing Test XML_SOCKLEN_T_SOCKLEN_T - Success
-- Looking for include file pthread.h
-- Looking for include file pthread.h - found
-- Checking for module 'icu-i18n'
--   Found icu-i18n, version 76.1
-- Performing Test FLAG_UNDEFINED_VERSION
-- Performing Test FLAG_UNDEFINED_VERSION - Success
-- Configuring done (3.2s)
-- Generating done (0.0s)
CMake Warning:
  Manually-specified variables were not used by the project:

    CMAKE_CXX_FLAGS


-- Build files have been written to: /home/kzl/makepkg/build/libxml2/src/libxml2/build
-- Cache values
// Build shared libraries
BUILD_SHARED_LIBS:BOOL=ON

// Path to a program.
CMAKE_ADDR2LINE:FILEPATH=/usr/bin/addr2line

// Path to a program.
CMAKE_AR:FILEPATH=/usr/bin/ar

// Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=Release

// Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

// C compiler
CMAKE_C_COMPILER:FILEPATH=/usr/bin/cc

// A wrapper around 'ar' adding the appropriate '--plugin' option for the GCC compiler
CMAKE_C_COMPILER_AR:FILEPATH=/usr/bin/gcc-ar

// A wrapper around 'ranlib' adding the appropriate '--plugin' option for the GCC compiler
CMAKE_C_COMPILER_RANLIB:FILEPATH=/usr/bin/gcc-ranlib

// Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=-march=native -O2 -pipe -fno-plt -fexceptions -fcf-protection -fstack-clash-protection -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -flto -ffat-lto-objects

// Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

// Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

// Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

// Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

// Path to a program.
CMAKE_DLLTOOL:FILEPATH=CMAKE_DLLTOOL-NOTFOUND

// Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=-Wl,-O1 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,-z,pack-relative-relocs -flto -ffat-lto-objects

// Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

// Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

// Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

// Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

// Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=

// User executables (bin)
CMAKE_INSTALL_BINDIR:PATH=bin

// Read-only architecture-independent data (DATAROOTDIR)
CMAKE_INSTALL_DATADIR:PATH=

// Read-only architecture-independent data root (share)
CMAKE_INSTALL_DATAROOTDIR:PATH=share

// Documentation root (DATAROOTDIR/doc/PROJECT_NAME)
CMAKE_INSTALL_DOCDIR:PATH=

// C header files (include)
CMAKE_INSTALL_INCLUDEDIR:PATH=include

// Info documentation (DATAROOTDIR/info)
CMAKE_INSTALL_INFODIR:PATH=

// Object code libraries (lib)
CMAKE_INSTALL_LIBDIR:PATH=lib

// Program executables (libexec)
CMAKE_INSTALL_LIBEXECDIR:PATH=libexec

// Locale-dependent data (DATAROOTDIR/locale)
CMAKE_INSTALL_LOCALEDIR:PATH=

// Modifiable single-machine data (var)
CMAKE_INSTALL_LOCALSTATEDIR:PATH=var

// Man documentation (DATAROOTDIR/man)
CMAKE_INSTALL_MANDIR:PATH=

// C header files for non-gcc (/usr/include)
CMAKE_INSTALL_OLDINCLUDEDIR:PATH=/usr/include

// Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr

// Run-time variable data (LOCALSTATEDIR/run)
CMAKE_INSTALL_RUNSTATEDIR:PATH=

// System admin executables (sbin)
CMAKE_INSTALL_SBINDIR:PATH=sbin

// Modifiable architecture-independent data (com)
CMAKE_INSTALL_SHAREDSTATEDIR:PATH=com

// Read-only single-machine data (etc)
CMAKE_INSTALL_SYSCONFDIR:PATH=etc

// Path to a program.
CMAKE_LINKER:FILEPATH=/usr/bin/ld

// Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/make

// Flags used by the linker during the creation of modules during all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=-Wl,-O1 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,-z,pack-relative-relocs -flto -ffat-lto-objects

// Flags used by the linker during the creation of modules during DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

// Flags used by the linker during the creation of modules during MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

// Flags used by the linker during the creation of modules during RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

// Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

// Path to a program.
CMAKE_NM:FILEPATH=/usr/bin/nm

// Path to a program.
CMAKE_OBJCOPY:FILEPATH=/usr/bin/objcopy

// Path to a program.
CMAKE_OBJDUMP:FILEPATH=/usr/bin/objdump

// Path to a program.
CMAKE_RANLIB:FILEPATH=/usr/bin/ranlib

// Path to a program.
CMAKE_READELF:FILEPATH=/usr/bin/readelf

// Flags used by the linker during the creation of shared libraries during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=-Wl,-O1 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,-z,pack-relative-relocs -flto -ffat-lto-objects

// Flags used by the linker during the creation of shared libraries during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

// Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

// Flags used by the linker during the creation of shared libraries during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

// Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

// If set, runtime paths are not added when installing shared libraries, but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

// If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

// Flags used by the linker during the creation of static libraries during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=

// Flags used by the linker during the creation of static libraries during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

// Flags used by the linker during the creation of static libraries during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

// Flags used by the linker during the creation of static libraries during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

// Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

// Path to a program.
CMAKE_STRIP:FILEPATH=/usr/bin/strip

// Path to a program.
CMAKE_TAPI:FILEPATH=CMAKE_TAPI-NOTFOUND

// If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

// Enable to build Debian packages
CPACK_BINARY_DEB:BOOL=OFF

// Enable to build FreeBSD packages
CPACK_BINARY_FREEBSD:BOOL=OFF

// Enable to build IFW packages
CPACK_BINARY_IFW:BOOL=OFF

// Enable to build NSIS packages
CPACK_BINARY_NSIS:BOOL=OFF

// Enable to build RPM packages
CPACK_BINARY_RPM:BOOL=OFF

// Enable to build STGZ packages
CPACK_BINARY_STGZ:BOOL=ON

// Enable to build TBZ2 packages
CPACK_BINARY_TBZ2:BOOL=OFF

// Enable to build TGZ packages
CPACK_BINARY_TGZ:BOOL=ON

// Enable to build TXZ packages
CPACK_BINARY_TXZ:BOOL=OFF

// Enable to build TZ packages
CPACK_BINARY_TZ:BOOL=ON

// Enable to build RPM source packages
CPACK_SOURCE_RPM:BOOL=OFF

// Enable to build TBZ2 source packages
CPACK_SOURCE_TBZ2:BOOL=ON

// Enable to build TGZ source packages
CPACK_SOURCE_TGZ:BOOL=ON

// Enable to build TXZ source packages
CPACK_SOURCE_TXZ:BOOL=ON

// Enable to build TZ source packages
CPACK_SOURCE_TZ:BOOL=ON

// Enable to build ZIP source packages
CPACK_SOURCE_ZIP:BOOL=OFF

// ICU data library (debug)
ICU_DATA_LIBRARY_DEBUG:FILEPATH=ICU_DATA_LIBRARY_DEBUG-NOTFOUND

// ICU data library (release)
ICU_DATA_LIBRARY_RELEASE:FILEPATH=/usr/lib/libicudata.so

// ICU derb executable
ICU_DERB_EXECUTABLE:FILEPATH=/usr/bin/derb

// ICU genbrk executable
ICU_GENBRK_EXECUTABLE:FILEPATH=/usr/bin/genbrk

// ICU genccode executable
ICU_GENCCODE_EXECUTABLE:FILEPATH=/usr/sbin/genccode

// ICU gencfu executable
ICU_GENCFU_EXECUTABLE:FILEPATH=/usr/bin/gencfu

// ICU gencmn executable
ICU_GENCMN_EXECUTABLE:FILEPATH=/usr/sbin/gencmn

// ICU gencnval executable
ICU_GENCNVAL_EXECUTABLE:FILEPATH=/usr/bin/gencnval

// ICU gendict executable
ICU_GENDICT_EXECUTABLE:FILEPATH=/usr/bin/gendict

// ICU gennorm2 executable
ICU_GENNORM2_EXECUTABLE:FILEPATH=/usr/sbin/gennorm2

// ICU genrb executable
ICU_GENRB_EXECUTABLE:FILEPATH=/usr/bin/genrb

// ICU gensprep executable
ICU_GENSPREP_EXECUTABLE:FILEPATH=/usr/sbin/gensprep

// ICU i18n library (debug)
ICU_I18N_LIBRARY_DEBUG:FILEPATH=ICU_I18N_LIBRARY_DEBUG-NOTFOUND

// ICU i18n library (release)
ICU_I18N_LIBRARY_RELEASE:FILEPATH=/usr/lib/libicui18n.so

// ICU icu-config executable
ICU_ICU-CONFIG_EXECUTABLE:FILEPATH=/usr/bin/icu-config

// ICU icuinfo executable
ICU_ICUINFO_EXECUTABLE:FILEPATH=/usr/bin/icuinfo

// ICU icupkg executable
ICU_ICUPKG_EXECUTABLE:FILEPATH=/usr/sbin/icupkg

// ICU include directory
ICU_INCLUDE_DIR:PATH=/usr/include

// ICU makeconv executable
ICU_MAKECONV_EXECUTABLE:FILEPATH=/usr/bin/makeconv

// ICU Makefile.inc data file
ICU_MAKEFILE_INC:FILEPATH=/usr/lib64/icu/76.1/Makefile.inc

// ICU pkgdata executable
ICU_PKGDATA_EXECUTABLE:FILEPATH=/usr/bin/pkgdata

// ICU pkgdata.inc data file
ICU_PKGDATA_INC:FILEPATH=/usr/lib64/icu/76.1/pkgdata.inc

// ICU uconv executable
ICU_UCONV_EXECUTABLE:FILEPATH=/usr/bin/uconv

// ICU uc library (debug)
ICU_UC_LIBRARY_DEBUG:FILEPATH=ICU_UC_LIBRARY_DEBUG-NOTFOUND

// ICU uc library (release)
ICU_UC_LIBRARY_RELEASE:FILEPATH=/usr/lib/libicuuc.so

// Add the Canonicalization support
LIBXML2_WITH_C14N:BOOL=ON

// Add the Catalog support
LIBXML2_WITH_CATALOG:BOOL=ON

// Add the debugging module
LIBXML2_WITH_DEBUG:BOOL=ON

// Add the FTP support
LIBXML2_WITH_FTP:BOOL=OFF

// Add the HTML support
LIBXML2_WITH_HTML:BOOL=ON

// Add the HTTP support
LIBXML2_WITH_HTTP:BOOL=OFF

// Add ICONV support
LIBXML2_WITH_ICONV:BOOL=ON

// Add ICU support
LIBXML2_WITH_ICU:BOOL=ON

// Add ISO8859X support if no iconv
LIBXML2_WITH_ISO8859X:BOOL=ON

// Add deprecated APIs for compatibility
LIBXML2_WITH_LEGACY:BOOL=OFF

// Use liblzma
LIBXML2_WITH_LZMA:BOOL=OFF

// Add the dynamic modules support
LIBXML2_WITH_MODULES:BOOL=ON

// Add the serialization support
LIBXML2_WITH_OUTPUT:BOOL=ON

// Add the xmlPattern selection interface
LIBXML2_WITH_PATTERN:BOOL=ON

// Build programs
LIBXML2_WITH_PROGRAMS:BOOL=ON

// Add the PUSH parser interfaces
LIBXML2_WITH_PUSH:BOOL=ON

// Build Python bindings
LIBXML2_WITH_PYTHON:BOOL=OFF

// Add the xmlReader parsing interface
LIBXML2_WITH_READER:BOOL=ON

// Add Regular Expressions support
LIBXML2_WITH_REGEXPS:BOOL=ON

// Add the older SAX1 interface
LIBXML2_WITH_SAX1:BOOL=ON

// Add Relax-NG and Schemas support
LIBXML2_WITH_SCHEMAS:BOOL=ON

// Add Schematron support
LIBXML2_WITH_SCHEMATRON:BOOL=ON

// Build tests
LIBXML2_WITH_TESTS:BOOL=ON

// Add multithread support
LIBXML2_WITH_THREADS:BOOL=ON

// Add per-thread memory
LIBXML2_WITH_THREAD_ALLOC:BOOL=OFF

// Enable thread-local storage
LIBXML2_WITH_TLS:BOOL=OFF

// Add the DOM like tree manipulation APIs
LIBXML2_WITH_TREE:BOOL=ON

// Add the DTD validation support
LIBXML2_WITH_VALID:BOOL=ON

// Add the xmlWriter saving interface
LIBXML2_WITH_WRITER:BOOL=ON

// Add the XInclude support
LIBXML2_WITH_XINCLUDE:BOOL=ON

// Add the XPATH support
LIBXML2_WITH_XPATH:BOOL=ON

// Add the XPointer support
LIBXML2_WITH_XPTR:BOOL=ON

// Add support for XPointer locations
LIBXML2_WITH_XPTR_LOCS:BOOL=OFF

// Use libz
LIBXML2_WITH_ZLIB:BOOL=OFF

// Working directory for XML Conformance Test Suite
LIBXML2_XMLCONF_WORKING_DIR:PATH=/home/kzl/makepkg/build/libxml2/src/libxml2/build

// Arguments to supply to pkg-config
PKG_CONFIG_ARGN:STRING=

// pkg-config executable
PKG_CONFIG_EXECUTABLE:FILEPATH=/usr/bin/pkg-config

// Path to a library.
pkgcfg_lib_ICU_PC_icui18n:FILEPATH=/usr/lib/libicui18n.so

