`configure' configures xcrypt 4.4.36 to adapt to many kinds of systems.

Usage: ./configure [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print `checking ...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for `--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or `..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [/usr/local]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [PREFIX]

By default, `make install' will install all the files in
`/usr/local/bin', `/usr/local/lib' etc.  You can specify
an installation prefix other than `/usr/local' using `--prefix',
for instance `--prefix=$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR            user executables [EPREFIX/bin]
  --sbindir=DIR           system admin executables [EPREFIX/sbin]
  --libexecdir=DIR        program executables [EPREFIX/libexec]
  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]
  --libdir=DIR            object code libraries [EPREFIX/lib]
  --includedir=DIR        C header files [PREFIX/include]
  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
  --infodir=DIR           info documentation [DATAROOTDIR/info]
  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
  --mandir=DIR            man documentation [DATAROOTDIR/man]
  --docdir=DIR            documentation root [DATAROOTDIR/doc/libxcrypt]
  --htmldir=DIR           html documentation [DOCDIR]
  --dvidir=DIR            dvi documentation [DOCDIR]
  --pdfdir=DIR            pdf documentation [DOCDIR]
  --psdir=DIR             ps documentation [DOCDIR]

Program names:
  --program-prefix=PREFIX            prepend PREFIX to installed program names
  --program-suffix=SUFFIX            append SUFFIX to installed program names
  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-silent-rules   less verbose build output (undo: "make V=1")
  --disable-silent-rules  verbose build output (undo: "make V=0")
  --enable-dependency-tracking
                          do not reject slow dependency extractors
  --disable-dependency-tracking
                          speeds up one-time build
  --disable-largefile     omit support for large files
  --disable-werror        do not treat all warnings as errors
  --enable-shared[=PKGS]  build shared libraries [default=yes]
  --enable-static[=PKGS]  build static libraries [default=yes]
  --enable-fast-install[=PKGS]
                          optimize for fast installation [default=yes]
  --disable-libtool-lock  avoid locking (might break parallel builds)
  --disable-symvers       disable library symbol versioning [default=auto]
  --enable-valgrind       Whether to enable Valgrind on the unit tests
  --disable-valgrind-memcheck
                          Whether to skip memcheck during the Valgrind tests
  --enable-valgrind-helgrind
                          Whether to use helgrind during the Valgrind tests
  --enable-valgrind-drd   Whether to use drd during the Valgrind tests
  --enable-valgrind-sgcheck
                          Whether to use sgcheck during the Valgrind tests
  --disable-failure-tokens
                          Make crypt and crypt_r return NULL on failure,
                          instead of a special "failure token" string that
                          isn't the hash of any passphrase. This matches the
                          behavior of several other crypt implementations, but
                          will break programs that assume these functions
                          never return NULL. crypt_rn and crypt_ra are not
                          affected by this option, and will always return NULL
                          on failure.
  --disable-xcrypt-compat-files
                          Disable the installation of the <xcrypt.h> header
                          file and the libxcrypt.{a,so} compatibility
                          symlinks.
  --enable-obsolete-api=ARG
                          When set to "yes", include all compatibility
                          interfaces. When set to "alt", include interfaces
                          for compatibility with ALT. When set to "glibc",
                          include interfaces for compatibility with glibc.
                          When set to "owl", include interfaces for
                          compatibility with Owl. When set to "suse", include
                          interfaces for compatibility with SUSE. When set to
                          "no", do not include any compatibility definitions
                          at all, and change the soname of the installed
                          library to libcrypt.so.2. This setting only affects
                          existing binaries; new programs cannot be linked
                          against the obsolete APIs (bigcrypt, fcrypt,
                          encrypt, setkey) in any case. [default=yes]
  --enable-obsolete-api-enosys=ARG
                          If set to "yes", this option replaces the obsolete
                          APIs (fcrypt, encrypt{,_r}, and setkey{,_r}) with
                          stubs that set errno to ENOSYS and return without
                          performing any real operations. This allows one to
                          disable descrypt support while preserving POSIX
                          compliance. For security reasons, the encrypt{,r}
                          functions will also overwrite their data-block
                          argument with random bits. The fcrypt function will
                          always produce a failure token (*0 or *1), unless
                          the library was also configured with
                          --disable-failure-tokens, in which case it will
                          always return NULL. [default=no]
  --enable-hashes=HASHES  Select hash methods to support. Acceptable values
                          are 'all' or a comma-separated list of names from
                          the file 'hashes.conf' and/or the keywords 'strong',
                          'alt', 'fedora', 'freebsd', 'glibc', 'netbsd',
                          'openbsd', 'osx', 'owl', 'solaris', and 'suse' which
                          select groups of methods as described in that file.
                          The default is 'all'. Note: if binary compatibility
                          with any historic libcrypt is desired (i.e. any
                          --enable-obsolete-api setting other than 'no'), the
                          'descrypt' hash must be enabled.

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-pkgconfigdir     pkg-config installation directory
                          ['${libdir}/pkgconfig']
  --with-pic[=PKGS]       try to use only PIC/non-PIC objects [default=use
                          both]
  --with-aix-soname=aix|svr4|both
                          shared library versioning (aka "SONAME") variant to
                          provide on AIX, [default=aix].
  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
  --with-sysroot[=DIR]    Search for dependent libraries within DIR (or the
                          compiler's sysroot if not specified).

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  PKG_CONFIG  path to pkg-config utility
  PKG_CONFIG_PATH
              directories to add to pkg-config's search path
  PKG_CONFIG_LIBDIR
              path overriding pkg-config's built-in search path
  CPP         C preprocessor
  LT_SYS_LIBRARY_PATH
              User-defined run-time library search path.

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to <https://github.com/besser82/libxcrypt/issues>.
xcrypt home page: <https://github.com/besser82/libxcrypt>.
