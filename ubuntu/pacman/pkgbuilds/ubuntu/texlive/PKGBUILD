pkgname=texlive
pkgver=70897
_texliveyear=2024
_texmfver=20240312
pkgrel=2
epoch=
pkgdesc="TeX Live"
arch=('x86_64')
url="https://tug.org/texlive/"
license=('KZL')
install=$pkgname.install
source=(http://tug.ctan.org/systems/texlive/tlnet/tlpkg/texlive.tlpdb
        git+https://github.com/TeX-Live/installer.git
        # git+https://github.com/TeX-Live/texlive-source.git
        git+https://github.com/TeX-Live/texlive-source.git#branch=branch$_texliveyear
        ################################################################################
        # http://ftp.math.utah.edu/pub/tex/historic/systems/texlive/$_texliveyear/texlive-$pkgver-source.tar.xz
        # http://ftp.math.utah.edu/pub/tex/historic/systems/texlive/$_texliveyear/install-tl-unx.tar.gz
        # http://ftp.math.utah.edu/pub/tex/historic/systems/texlive/$_texliveyear/texlive-$_texmfver-texmf.tar.xz
        $pkgname.install)
# noextract=(texlive-$_texmfver-texmf.tar.xz)
sha256sums=('e8d1b53ad956e39705153a192e0dab366cef6fc19c9c91eb8c4bf537fbf2de6f'
            'SKIP'
            'SKIP'
            'c31b6deaa47009e3dbccacccdcd77f9f536e0a811da45aa7117e9d57e9049814')


platform="$(uname -i)-$(uname -s | tr '[:upper:]' '[:lower:]')"
prefix="opt/TeXLive"

stage0_pkgs=(
  00texlive.installation
  texlive.infra
  texlive-scripts
)
stage1_pkgs=(
  scheme-infraonly
  scheme-minimal
  dehyph-exptl
)
stage2_pkgs=(
  scheme-basic
  ###
  collection-latexrecommended
  collection-latexextra
  collection-fontsrecommended
  collection-fontutils
  ###
  chktex
  latexindent
  latexmk
  pdfcrop
  ###
  cascadia-code
  fontawesome
  inconsolata
  newtx
  ###
  algorithm2e
  ###
  acmart
  ieeetran
)

pkgver() {
  cd $pkgname-source

  git describe --tags | sed 's/svn//;s/^v//;s/-g.*//;s/-/.g/'
}

prepare() {
  cd $pkgname-source

  mkdir -p build
}

build() {
  cd $pkgname-source/build

  # https://tug.org/texlive/doc/tlbuild.html

  ./../configure -C \
    --prefix="/$prefix" \
    --datarootdir='${prefix}' \
    --infodir='${prefix}/share/info' \
    --mandir='${prefix}/share/man' \
    --disable-all-pkgs \
    --disable-native-texlive-build \
    --enable-multiplatform \
    --enable-web2c \
    --enable-tex \
    --enable-luatex \
    --enable-luajittex \
    --enable-pdftex \
    --enable-pdftex-synctex \
    --enable-synctex \
    --enable-chktex \
    --enable-dvipng \
    --enable-texlive \
    --enable-linked-scripts \
    --enable-shared \
    --disable-static \
    --with-banner-add="/KZL $(date '+%Y/%m/%d %T %z') ($pkgrel)" \
    --with-gs="/usr/bin/gs" \
    --without-system-cairo \
    --without-system-freetype2 \
    --without-system-gd \
    --without-system-gmp \
    --without-system-graphite2 \
    --without-system-harfbuzz \
    --without-system-icu \
    --without-system-kpathsea \
    --without-system-libpaper \
    --without-system-libpng \
    --without-system-mpfi \
    --without-system-mpfr \
    --without-system-pixman \
    --without-system-potrace \
    --without-system-ptexenc \
    --without-system-teckit \
    --without-system-zlib \
    --without-system-zziplib \
    --without-x

  make
}

package() {
  cd $pkgname-source/build

  local _platform="$("$srcdir"/texlive-source/build-aux/config.guess)"
  local _bindir="$prefix/bin/$_platform"
  local _libdir="$prefix/lib/$_platform"

  export PATH="$pkgdir/$_bindir:$PATH"
  export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$pkgdir/$_libdir"

  make DESTDIR="$pkgdir" install-strip
  make DESTDIR="$pkgdir" texlinks

  ### texmf-dist
  cp -rv "$srcdir"/installer/texmf-dist "$pkgdir/$prefix"
  cp ../texk/texlive/linked_scripts/texlive/mktexlsr.pl "$pkgdir/$prefix"/texmf-dist/scripts/texlive/mktexlsr.pl

  ### tlpkg
  cp -rv "$srcdir"/installer/tlpkg "$pkgdir/$prefix"/
  mkdir -pv "$pkgdir/$prefix"/tlpkg/{backups,tlpobj}
  rm -fv "$pkgdir/$prefix"/tlpkg/texlive.tlpdb
  for pkg in "${stage0_pkgs[@]}"; do
      sed -n \
          -e "/^name $pkg$/,/^$/p" \
          -e "/^name $pkg.$platform$/,/^$/p" \
          "$srcdir"/texlive.tlpdb >> "$pkgdir/$prefix"/tlpkg/texlive.tlpdb
  done
  sed -i \
      -e '/^name texlive-scripts$/,/^revision [0-9]\+/{' \
      -e '/^revision [0-9]\+/c\revision '"$pkgver" \
      -e '}' \
      "$pkgdir/$prefix"/tlpkg/texlive.tlpdb

  ### texmf-var
  mkdir -pv "$pkgdir/$prefix"/texmf-var/tex/generic/config/

  ### tlmgr
  tlmgr option repository https://mirror.ctan.org/systems/texlive/tlnet
  tlmgr platform remove \
    aarch64-linux \
    amd64-freebsd \
    amd64-netbsd \
    armhf-linux \
    i386-freebsd \
    i386-linux \
    i386-netbsd \
    i386-solaris \
    universal-darwin \
    windows \
    x86_64-cygwin \
    x86_64-darwinlegacy \
    x86_64-linuxmusl \
    x86_64-solaris || :
  tlmgr update --self || :
  tlmgr install --reinstall "${stage1_pkgs[@]}"
  sed -i \
      -e '/^name texlive-scripts$/,/^revision [0-9]\+/{' \
      -e '/^revision [0-9]\+/c\revision '"$pkgver" \
      -e '}' \
      "$pkgdir/$prefix"/tlpkg/texlive.tlpdb
  tlmgr install "${stage2_pkgs[@]}"

  ### PATH
  echo "export PATH=\$PATH:/$_bindir" | install -Dm644 /dev/stdin "$pkgdir"/etc/profile.d/texlive.sh

  ### clean
  rm -rfv "$pkgdir/$prefix/bin/$(uname -i)-$(uname -s | tr '[:upper:]' '[:lower:]')"
  rm -rfv "$pkgdir/$prefix"/{readme-html.dir,readme-txt.dir}
  rm -fv "$pkgdir/$prefix"/install-tl
  rm -fv "$pkgdir/$prefix"/LICENSE.*
  rm -fv "$pkgdir/$prefix"/README*
  rm -fv "$pkgdir/$prefix"/*.html
  rm -fv "$pkgdir/$prefix"/*.txt
  rm -rfv "$pkgdir/$prefix"/texmf-dist/doc
  rm -fv "$pkgdir/$prefix"/tlpkg/texlive.tlpdb.*
  rm -fv "$pkgdir/$prefix"/tlpkg/backups/*
  rm -fv "$pkgdir/$prefix"/tlpkg/tlpobj/*.tlpobj
  rm -rfv "$pkgdir/$prefix"/tlpkg/installer/{curl,wget,xz}
  rm -fv "$pkgdir/$prefix"/tlpkg/installer/*.txt
  rm -fv "$pkgdir/$prefix"/tlpkg/installer/*.exe
  rm -fv "$pkgdir/$prefix"/tlpkg/installer/*.bat
  rm -fv "$pkgdir/$prefix"/tlpkg/installer/*.ini
  rm -fv "$pkgdir/$prefix"/tlpkg/installer/*.gif
  rm -fv "$pkgdir/$prefix"/tlpkg/installer/*.pl
  rm -fv "$pkgdir/$prefix"/tlpkg/installer/*.tcl
  rm -rfv "$pkgdir/$prefix"/tlpkg/tlperl

  local -a _path=(
    texmf-dist/web2c
    texmf-var/fonts/map
    texmf-var/tex/generic/config
    texmf-var/web2c
  )
  for p in ${_path[@]}; do
    grep -rl "$pkgdir" "$pkgdir/$prefix/$p" | xargs sed -i -e "s|$pkgdir||g"
  done
}
