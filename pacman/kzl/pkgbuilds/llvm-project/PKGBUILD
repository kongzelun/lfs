# Maintainer: Zelun Kong <zelun.kong@outlook.com>

pkgname=llvm-project
pkgver=13.0.0
pkgrel=1
epoch=1
pkgdesc="Collection of modular and reusable compiler and toolchain technologies"
arch=('x86_64')
url="https://llvm.org/"
license=('KZL')
depends=(libffi)
provides=(clang compiler-rt libc++ libc++abi lld lldb llvm llvm-libs openmp)
conflicts=(clang compiler-rt libc++ libc++abi lld lldb llvm llvm-libs openmp)
replaces=(clang compiler-rt libc++ libc++abi lld lldb llvm llvm-libs openmp)
options=(staticlibs)
source=(https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver/$pkgname-$pkgver.src.tar.xz{,.sig})
sha256sums=('6075ad30f1ac0e15f07c1bf062c1e1268c241d674f11bd32cdf0e040c71f2bf3'
            'SKIP')
validpgpkeys=('474E22316ABF4785A88C6E8EA2C794A986419D8A')

_cmake_options=(
    -DCMAKE_BUILD_TYPE=Release
    -DCMAKE_INSTALL_PREFIX=/usr
    -DCMAKE_C_COMPILER=/usr/bin/clang
    -DCMAKE_CXX_COMPILER=/usr/bin/clang++
    -DCMAKE_C_FLAGS="${CFLAGS/-O2/-O3} $CPPFLAGS"
    -DCMAKE_CXX_FLAGS="${CXXFLAGS/-O2/-O3} $CPPFLAGS"
    -DCMAKE_EXE_LINKER_FLAGS="-fuse-ld=lld"
    -DCMAKE_SHARED_LINKER_FLAGS="-fuse-ld=lld"
    -DCMAKE_MODULE_LINKER_FLAGS="-fuse-ld=lld"
    -DCMAKE_AR=/usr/bin/llvm-ar
    -DCMAKE_NM=/usr/bin/llvm-nm
    -DCMAKE_RANLIB=/usr/bin/llvm-ranlib
    -DCMAKE_OBJCOPY=/usr/bin/llvm-objcopy
    -DCMAKE_OBJDUMP=/usr/bin/llvm-objdump
    -DCMAKE_READELF=/usr/bin/llvm-readelf
)

_llvm_options=(
    -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra;compiler-rt;libc;lld;lldb;openmp"
    -DLLVM_ENABLE_RUNTIMES="libcxx;libcxxabi;libunwind"
    -DLLVM_PARALLEL_COMPILE_JOBS="$(nproc)"
    -DLLVM_PARALLEL_LINK_JOBS="$(nproc)"
    -DLLVM_USE_LINKER=lld
    -DLLVM_BUILD_LLVM_DYLIB=ON
    -DLLVM_BUILD_TESTS=ON
    -DLLVM_ENABLE_FFI=ON
    -DLLVM_ENABLE_LIBCXX=ON
    -DLLVM_ENABLE_LTO=ON
    -DLLVM_ENABLE_RTTI=ON
    -DLLVM_INSTALL_UTILS=ON
    -DLLVM_LINK_LLVM_DYLIB=ON
)

build() {
  cd $pkgname-$pkgver.src

  cmake \
    "${_cmake_options[@]}" \
    "${_llvm_options[@]}" \
    -DLLDB_USE_SYSTEM_SIX=ON \
    -DLIBOMP_INSTALL_ALIASES=OFF \
    -S llvm \
    -B build \
    -G Ninja

  cmake --build build
}

check() {
  cd $pkgname-$pkgver.src

  cmake --build build --target tests || warning "Check failed."
}

package() {
  cd $pkgname-$pkgver.src

  DESTDIR="$pkgdir/" cmake --build build --target install

  sed -e 's|libexec|lib/clang|' -i "$pkgdir"/usr/bin/scan-build
  mv "$pkgdir"/usr/libexec/* "$pkgdir"/usr/lib/clang/
  rmdir "$pkgdir"/usr/libexec
}
