# Maintainer: Zelun Kong <zelun.kong@outlook.com>

pkgname=rust
pkgver=1.58.1
pkgrel=1
epoch=2
pkgdesc="Systems programming language focused on safety, speed and concurrency"
arch=('x86_64')
url="https://www.rust-lang.org/"
license=('KZL')
depends=(curl llvm)
makedepends=(libffi lld)
optdepends=("lldb: rust-lldb script"
            "gdb: rust-gdb script")
source=(https://static.rust-lang.org/dist/rustc-$pkgver-src.tar.gz{,.asc})
sha256sums=('a839afdd3625d6f3f3c4c10b79813675d1775c460d14be1feaf33a6c829c07c7'
            'SKIP')
validpgpkeys=('108F66205EAEB0AAA8DD5E1C85AB96E6FA1BE5FE')

prepare() {
  cd rustc-$pkgver-src

  cp config.toml.example config.toml

  # sed -e '/^#link-shared = /c\link-shared = true' \
  #     -e '/^#cargo = /c\cargo = "/usr/bin/cargo"' \
  #     -e '/^#rustc = /c\rustc = "/usr/bin/rustc"' \
  #     -e '/^#rustfmt = /c\rustfmt = "/usr/bin/rustfmt"' \
  #     -e '/^#vendor = /c\vendor = true' \
  #     -e '/^#extended = /c\extended = true' \
  #     -e '/^#tools = /s/^#//' \
  #     -e '/^#sanitizers = /c\sanitizers = true' \
  #     -e '/^#profiler = /c\profiler = true' \
  #     -e '/^#codegen-units-std = /c\codegen-units-std = 1' \
  #     -e '/^#prefix = /c\prefix = "/usr"' \
  #     -e '/^#channel = /c\channel = "stable"' \
  #     -e '/^#rpath = /c\rpath = false' \
  #     -e '/^#jemalloc = /c\jemalloc = true' \
  #     -e '/^#llvm-config = /c\llvm-config = "/usr/bin/llvm-config"' \
  #     -i config.toml

  ### bootstrap
  sed -e '/^#link-shared = /c\link-shared = true' \
      -e '/^#vendor = /c\vendor = true' \
      -e '/^#extended = /c\extended = true' \
      -e '/^#tools = /s/^#//' \
      -e '/^#sanitizers = /c\sanitizers = true' \
      -e '/^#profiler = /c\profiler = true' \
      -e '/^#codegen-units-std = /c\codegen-units-std = 1' \
      -e '/^#prefix = /c\prefix = "/usr"' \
      -e '/^#channel = /c\channel = "stable"' \
      -e '/^#rpath = /c\rpath = false' \
      -e '/^#jemalloc = /c\jemalloc = true' \
      -e '/^#llvm-config = /c\llvm-config = "/usr/bin/llvm-config"' \
      -i config.toml

  sed -e 's/libexec/lib/' \
      -i src/bootstrap/dist.rs \
      -i src/tools/cargo/src/cargo/ops/registry/auth.rs
}

build() {
  cd rustc-$pkgver-src

  export RUST_BACKTRACE=1

  ./x.py -j "$(nproc)" build
}

check() {
  cd rustc-$pkgver-src

  ./x.py test || warning "Check failed."
}

package() {
  cd rustc-$pkgver-src

  DESTDIR="$pkgdir/" ./x.py -j "$(nproc)" install

  # rustbuild always installs copies of the shared libraries to /usr/lib,
  # overwrite them with symlinks to the per-architecture versions
  ln -srft "$pkgdir"/usr/lib "$pkgdir"/usr/lib/rustlib/x86_64-unknown-linux-gnu/lib/*.so

  install -dm755 "$pkgdir"/usr/share/bash-completion/completions/
  mv "$pkgdir"/etc/bash_completion.d/* "$pkgdir"/usr/share/bash-completion/completions/
  rmdir "$pkgdir"/etc/{bash_completion.d,}

  rm "$pkgdir"/usr/lib/rustlib/{components,install.log,manifest-*,rust-installer-version,uninstall.sh}
}
