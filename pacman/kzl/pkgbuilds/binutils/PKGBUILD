# Maintainer: Zelun Kong <zelun.kong@outlook.com>

# order
# linux-api-headers -> glibc -> binutils -> gcc -> binutils -> glibc

pkgname=binutils
pkgver=2.38
pkgrel=1
epoch=1
pkgdesc="A set of programs to assemble and manipulate binary and object files"
arch=('x86_64')
url="https://www.gnu.org/software/binutils/"
license=('KZL')
options=(staticlibs)
source=(https://ftp.gnu.org/gnu/$pkgname/$pkgname-$pkgver.tar.xz{,.sig})
sha256sums=('e316477a914f567eccc34d5d29785b8b0f5a10208d36bbacedcc39048ecfe024'
            'SKIP')
validpgpkeys=('3A24BC1E8FB409FA9F14371813FCEF89DD9E3C4F')

prepare() {
  cd $pkgname-$pkgver

  mkdir -p build

  sed -e '/^development=/s/true/false/' -i bfd/development.sh
  sed -e "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" -i libiberty/configure
}

_general_options=(
  --prefix=/usr
  --enable-gold=no
  --enable-ld=default
  --enable-pgo-build=lto
  --enable-lto
  --disable-nls
  --with-system-zlib
)

_binutils_options=(
  --enable-shared
  --enable-plugins
  --enable-targets=x86_64-pep
  --enable-deterministic-archives
  --with-pic
  --with-debuginfod
)

_gold_options=(
  --enable-threads
  --with-lib-path=/usr/lib:/usr/local/lib
)

_ld_options=(
  --enable-relro
)

_libiberty_options=(
  --enable-install-libiberty
  --enable-cet
)

build() {
  cd $pkgname-$pkgver/build

  ../configure \
    "${_general_options[@]}" \
    "${_binutils_options[@]}" \
    "${_gold_options[@]}" \
    "${_ld_options[@]}" \
    "${_libiberty_options[@]}"

  make -O tooldir="/usr"
}

check() {
  cd $pkgname-$pkgver/build

  make -O CFLAGS="-O2 -no-pie" CXXFLAGS="-O2 -no-pie -fno-PIC" CFLAGS_FOR_TARGET="-O2 -g" LDFLAGS="" check || warning "Check failed."
}

package() {
  cd $pkgname-$pkgver/build

  make prefix="$pkgdir/usr" tooldir="$pkgdir/usr" install

  # clean
  rm -f "$pkgdir"/usr/share/man/man1/{dlltool,nlmconv,windres,windmc}*

  # No shared linking to these files outside binutils
  rm -f "$pkgdir"/usr/lib/lib{bfd,opcodes}.so
  echo 'INPUT( /usr/lib/libbfd.a -liberty -lz -ldl )' > "$pkgdir"/usr/lib/libbfd.so
  echo 'INPUT( /usr/lib/libopcodes.a -lbfd )' > "$pkgdir"/usr/lib/libopcodes.so
}
