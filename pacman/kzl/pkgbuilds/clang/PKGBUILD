# Maintainer: Zelun Kong <zelun.kong@outlook.com>

pkgname=clang
pkgver=13.0.0
pkgrel=1
epoch=1
pkgdesc="C language family frontend for LLVM"
arch=('x86_64')
url="https://clang.llvm.org/"
license=('KZL')
groups=(llvm-project)
depends=(compiler-rt llvm)
optdepends=("openmp: OpenMP support in clang with -fopenmp")
source=(https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver/clang-$pkgver.src.tar.xz{,.sig}
        https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver/clang-tools-extra-$pkgver.src.tar.xz{,.sig}
        https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver/llvm-$pkgver.src.tar.xz{,.sig})
sha256sums=('5d611cbb06cfb6626be46eb2f23d003b2b80f40182898daa54b1c4e8b5b9e17e'
            'SKIP'
            '428b6060a28b22adf0cdf5d827abbc2ba81809f4661ede3d02b1d3fedaa3ead5'
            'SKIP'
            '408d11708643ea826f519ff79761fcdfc12d641a2510229eec459e72f8163020'
            'SKIP')
validpgpkeys=('474E22316ABF4785A88C6E8EA2C794A986419D8A')

_cmake_options=(
    -DCMAKE_BUILD_TYPE=Release
    -DCMAKE_INSTALL_PREFIX=/usr
    -DCMAKE_INSTALL_LIBDIR=lib
    -DCMAKE_INSTALL_LIBEXECDIR=lib
    # -DCMAKE_C_COMPILER=/usr/bin/clang
    # -DCMAKE_CXX_COMPILER=/usr/bin/clang++
    # -DCMAKE_C_FLAGS="${CFLAGS/-O2/-O3} $CPPFLAGS"
    # -DCMAKE_CXX_FLAGS="${CXXFLAGS/-O2/-O3} $CPPFLAGS"
    # -DCMAKE_EXE_LINKER_FLAGS="-fuse-ld=lld"
    # -DCMAKE_SHARED_LINKER_FLAGS="-fuse-ld=lld"
    # -DCMAKE_MODULE_LINKER_FLAGS="-fuse-ld=lld"
    # -DCMAKE_AR=/usr/bin/llvm-ar
    # -DCMAKE_NM=/usr/bin/llvm-nm
    # -DCMAKE_RANLIB=/usr/bin/llvm-ranlib
    # -DCMAKE_OBJCOPY=/usr/bin/llvm-objcopy
    # -DCMAKE_OBJDUMP=/usr/bin/llvm-objdump
    # -DCMAKE_READELF=/usr/bin/llvm-readelf
)

_llvm_options=(
    -DLLVM_BUILD_TESTS=ON
    -DLLVM_LINK_LLVM_DYLIB=ON
    -DLLVM_ENABLE_RTTI=ON
)

prepare() {
  cd $pkgname-$pkgver.src

  mv "$srcdir"/clang-tools-extra-$pkgver.src tools/extra
}

build() {
  cd $pkgname-$pkgver.src

  cmake \
    "${_cmake_options[@]}" \
    "${_llvm_options[@]}" \
    -DLLVM_LIT=/usr/bin/lit \
    -DLLVM_MAIN_SRC_DIR="$srcdir/llvm-$pkgver.src" \
    -S . \
    -B build \
    -G Ninja

  cmake --build build
}

check() {
  cd $pkgname-$pkgver.src

  cmake --build build --target tests || warning "Check failed."
}

package() {
  cd $pkgname-$pkgver.src

  DESTDIR="$pkgdir/" cmake --build build --target install

  sed -e 's|libexec|lib/clang|' -i "$pkgdir"/usr/bin/scan-build
  mv "$pkgdir"/usr/libexec/* "$pkgdir"/usr/lib/clang/
  rmdir "$pkgdir"/usr/libexec
}
